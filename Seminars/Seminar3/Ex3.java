package Seminars.Seminar3;


// 1. Создайтеклассисключения,которыйбудетвыбрасываться приделениина
// 0.Исключениедолжноотображать понятноедляпользователя сообщение
// обошибке.
// 2. Создайтеклассисключений,котороебудетвозникатьприобращении к
// пустомуэлементувмассивессылочноготипа.Исключениедолжно
// отображать понятноедляпользователя сообщениеобошибке
// 3. Создайтеклассисключения,котороебудетвозникатьприпопыткеоткрыть
// несуществующий файл. Исключение должно отображать понятное для
// пользователясообщениеобошибке.


public class Ex3 {
    // Вложенный класс MyDivByZero, расширяющий ArithmeticException
    class MyDivByZero extends ArithmeticException {
        // Конструктор без параметров, устанавливающий сообщение об ошибке "Делить на ноль нельзя"
        public MyDivByZero() {
            super("Делить на ноль нельзя");
        }
    }

    // Вложенный класс AppLyArrayElementNull, расширяющий NullPointerException
    class AppLyArrayElementNull extends NullPointerException {
        // Конструктор без параметров, устанавливающий сообщение об ошибке "Обращение к пустому элементу."
        public AppLyArrayElementNull() {
            super("Обращение к пустому элементу.");
        }
        
        // Конструктор с параметром index, устанавливающий сообщение об ошибке с указанием индекса пустого элемента
        public AppLyArrayElementNull(int index) {
            super("Пустой элемент находится на индексе " + index);
        }
    }

    // Вложенный класс ErrorOpenFile, расширяющий FileNotFoundException
    class ErrorOpenFile extends FileNotFoundException {
        // Конструктор без параметров, устанавливающий сообщение об ошибке "Файл не найден."
        public ErrorOpenFile() {
            super("Файл не найден.");
        }
        
        // Конструктор с параметром s, устанавливающий сообщение об ошибке с указанием пути файла
        public ErrorOpenFile(String s) {
            super("Файл не найден по данному пути" + s);
        }
    }
}

